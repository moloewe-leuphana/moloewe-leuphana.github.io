"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9367],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),d=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(s.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},c=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=d(n),u=a,m=c["".concat(s,".").concat(u)]||c[u]||h[u]||l;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=c;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r.mdxType="string"==typeof e?e:a,i[1]=r;for(var d=2;d<l;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9008:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var o=n(7462),a=(n(7294),n(3905));const l={sidebar_position:1},i="Setting Up Tools",r={unversionedId:"project_notebook/setting_up_tools",id:"project_notebook/setting_up_tools",title:"Setting Up Tools",description:"Each MoL\xf6we project contains a Project Notebook.",source:"@site/docs/project_notebook/setting_up_tools.md",sourceDirName:"project_notebook",slug:"/project_notebook/setting_up_tools",permalink:"/docs/project_notebook/setting_up_tools",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Change Scene Button",permalink:"/docs/moloewe-tools/change-scene"},next:{title:"Advanced: Setting up an Environment",permalink:"/docs/project_notebook/setting_up_environment"}},s={},d=[{value:"<strong>1 Acquiring the Project Notebook</strong>",id:"1-acquiring-the-project-notebook",level:2},{value:"<strong>2 Accessing the Project Notebook</strong>",id:"2-accessing-the-project-notebook",level:2},{value:"<strong>3 Structure of the Project Notebook</strong>",id:"3-structure-of-the-project-notebook",level:2},{value:"<strong>4 Preparatory code</strong>",id:"4-preparatory-code",level:2},{value:"4.1 Import Modules",id:"41-import-modules",level:3},{value:"4.2 Access Tokens and API Keys",id:"42-access-tokens-and-api-keys",level:3},{value:"4.3 Global Variables, Constants, Settings",id:"43-global-variables-constants-settings",level:3},{value:"4.4 Notebook Functions",id:"44-notebook-functions",level:3},{value:"<strong>5 General Tool Code Structure</strong>",id:"5-general-tool-code-structure",level:2},{value:"5.1 Where to Place Tool Codes",id:"51-where-to-place-tool-codes",level:3},{value:"5.2 The <code>get_</code> and <code>set_</code> Function",id:"52-the-get_-and-set_-function",level:3},{value:"5.2.1 The <code>get_</code> Function",id:"521-the-get_-function",level:4},{value:"5.2.2 The <code>set_</code> Function",id:"522-the-set_-function",level:4},{value:"<strong>6 Tool Codes</strong>",id:"6-tool-codes",level:2},{value:"6.1 Switch",id:"61-switch",level:3},{value:"6.2 Dropdown",id:"62-dropdown",level:3},{value:"6.2.1 Example Scenario",id:"621-example-scenario",level:4},{value:"6.3 Button",id:"63-button",level:3},{value:"6.3.1 Example Scenario",id:"631-example-scenario",level:4},{value:"6.4 Slider",id:"64-slider",level:3},{value:"6.4.1 Example Scenario",id:"641-example-scenario",level:4},{value:"6.5 Graph",id:"65-graph",level:3},{value:"6.5.1 Loading Data from Files or URLs",id:"651-loading-data-from-files-or-urls",level:4},{value:"6.5.2 Loading Data from a File",id:"652-loading-data-from-a-file",level:4},{value:"6.5.3 Loading Data from URL",id:"653-loading-data-from-url",level:4},{value:"6.5.4 Example Scenario",id:"654-example-scenario",level:4},{value:"6.6 Map",id:"66-map",level:3},{value:"?",id:"",level:3},{value:"<strong>7 Downloading the Project Notebook</strong>",id:"7-downloading-the-project-notebook",level:2},{value:"<strong>8 Uploading the Project Notebook to MoL\xf6we</strong>",id:"8-uploading-the-project-notebook-to-mol\xf6we",level:2}],p={toc:d};function h(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,o.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"setting-up-tools"},"Setting Up Tools"),(0,a.kt)("p",null,"Each MoL\xf6we project contains a ",(0,a.kt)("a",{parentName:"p",href:"/docs/glossary#project-notebook"},(0,a.kt)("strong",{parentName:"a"},"Project Notebook")),".\nHere you can set up some of the ",(0,a.kt)("strong",{parentName:"p"},"MoL\xf6we tools")," using Python programming."),(0,a.kt)("p",null,"The required steps to achieve this are presented in this chapter."),(0,a.kt)("p",null,"(Note: Some MoL\xf6we tools do not need to be set up in the Project Notebook, see the\n",(0,a.kt)("a",{parentName:"p",href:"/docs/moloewe-tools/overview"},(0,a.kt)("strong",{parentName:"a"},"Tools Chapter")),")"),(0,a.kt)("admonition",{title:"Python Experience",type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Although you will set up MoL\xf6we tools using Python, programming experience with Python is ",(0,a.kt)("strong",{parentName:"p"},"not")," required.\nThis chapter is set up for users with no Python experience."),(0,a.kt)("p",{parentName:"admonition"},"However, if you're experienced with Python and would like to explore more advanced applications,\nyou can also check out the chapter for ",(0,a.kt)("a",{parentName:"p",href:"/docs/project_notebook/setting_up_environment"},(0,a.kt)("strong",{parentName:"a"},"Advanced Users")),".")),(0,a.kt)("h2",{id:"1-acquiring-the-project-notebook"},(0,a.kt)("strong",{parentName:"h2"},"1 Acquiring the Project Notebook")),(0,a.kt)("p",null,'When a new MoL\xf6we project is created, a Project Notebook is automatically generated (named "Template Notebook").\nPlease go to your ',(0,a.kt)("a",{parentName:"p",href:"/docs/user-interface#3-edit-mode"},(0,a.kt)("strong",{parentName:"a"},"Project Page"))," and download the Project Notebook from\nthe Notebooks Subpage with the steps described ",(0,a.kt)("a",{parentName:"p",href:"/docs/edit-mode/notebooks#1-download-a-project-notebook"},(0,a.kt)("strong",{parentName:"a"},"here")),"."),(0,a.kt)("h2",{id:"2-accessing-the-project-notebook"},(0,a.kt)("strong",{parentName:"h2"},"2 Accessing the Project Notebook")),(0,a.kt)("p",null,"You can access the Project Notebook using ",(0,a.kt)("strong",{parentName:"p"},"JupyterHub"),".\nYou have received a username and password for JupyterHub together with your MoL\xf6we user account."),(0,a.kt)("p",null,"You can open JupyterHub ",(0,a.kt)("a",{parentName:"p",href:"https://jupyter.leuphana.de/hub/login?next=%2Fhub%2F"},(0,a.kt)("strong",{parentName:"a"},"here")),"."),(0,a.kt)("p",null,'Once you logged in to JupyterHub, please upload the Project Notebook by clicking the "Upload Files" button and choose\nthe Project Notebook from your download folder.'),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(7518).Z,width:"1922",height:"882"})),(0,a.kt)("p",null,"Now open the Project Notebook by double-clicking on it in the left sidebar. The notebook will open in a new tab."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(4393).Z,width:"1919",height:"879"})),(0,a.kt)("h2",{id:"3-structure-of-the-project-notebook"},(0,a.kt)("strong",{parentName:"h2"},"3 Structure of the Project Notebook")),(0,a.kt)("p",null,"In order to make the Python code easier to read, the Project Notebook is arranged into ",(0,a.kt)("strong",{parentName:"p"},"cells"),".\nEach cell fulfills a specific task in the notebook."),(0,a.kt)("p",null,"For your purpose (setting up MoL\xf6we tools) only the following cells are relevant/need to be edited:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Preparatory code:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Import modules"),(0,a.kt)("li",{parentName:"ul"},"Access Tokens and API Keys"),(0,a.kt)("li",{parentName:"ul"},"Global Variables, Constants, Settings"),(0,a.kt)("li",{parentName:"ul"},"Notebook Functions")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Tool Code:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Tool Switch"),(0,a.kt)("li",{parentName:"ul"},"Tool Dropdown"),(0,a.kt)("li",{parentName:"ul"},"Tool Button"),(0,a.kt)("li",{parentName:"ul"},"Tool Slider"),(0,a.kt)("li",{parentName:"ul"},"Tool Map"),(0,a.kt)("li",{parentName:"ul"},"Tool Graph")),(0,a.kt)("p",null,"The following two sections will explain how these cells need to be edited in order to set up MoL\xf6we tools."),(0,a.kt)("h2",{id:"4-preparatory-code"},(0,a.kt)("strong",{parentName:"h2"},"4 Preparatory code")),(0,a.kt)("p",null,"In this section we will explain how the cells of the ",(0,a.kt)("strong",{parentName:"p"},"preparatory")," part of the Project Notebook need to be edited."),(0,a.kt)("h3",{id:"41-import-modules"},"4.1 Import Modules"),(0,a.kt)("p",null,'In the cell "Import Modules", please add the following two lines:'),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import geopandas as gpd")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"import plotly.express as px")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"from moloewe_chart import MoloeweChart")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"my_chart = MoloeweChart()")),(0,a.kt)("p",null,"Like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(2750).Z,width:"1412",height:"747"})),(0,a.kt)("h3",{id:"42-access-tokens-and-api-keys"},"4.2 Access Tokens and API Keys"),(0,a.kt)("p",null,'The cell "Access Tokens and API Keys" needs to be edited if you want to show a map using mapbox.'),(0,a.kt)("p",null,"Please see the chapter on ",(0,a.kt)("a",{parentName:"p",href:"/docs/moloewe-tools/map"},(0,a.kt)("strong",{parentName:"a"},"Maps")),"."),(0,a.kt)("h3",{id:"43-global-variables-constants-settings"},"4.3 Global Variables, Constants, Settings"),(0,a.kt)("p",null,'The cell "Global Variables, Constants, Settings" is different for every tool.\nTherefore, please refer to the specific to find out what code you exactly need here.'),(0,a.kt)("h3",{id:"44-notebook-functions"},"4.4 Notebook Functions"),(0,a.kt)("p",null,'The cell "Notebook Functions" is different for every tool.\nTherefore, please refer to the specific to find out what code you exactly need here.'),(0,a.kt)("h2",{id:"5-general-tool-code-structure"},(0,a.kt)("strong",{parentName:"h2"},"5 General Tool Code Structure")),(0,a.kt)("p",null,"Before you jump into the individual tool codes, you should familiarize yourself with the ",(0,a.kt)("strong",{parentName:"p"},"general code structure"),"\nof MoL\xf6we tools described in this section."),(0,a.kt)("h3",{id:"51-where-to-place-tool-codes"},"5.1 Where to Place Tool Codes"),(0,a.kt)("p",null,"The code of a tool needs to be placed in the cell that contains the respective ",(0,a.kt)("strong",{parentName:"p"},"tool class"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example")),":"),(0,a.kt)("p",null,"You would put the code for the ",(0,a.kt)("strong",{parentName:"p"},"Switch Tool")," in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Switch"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_switch"),".\nThe code for the ",(0,a.kt)("strong",{parentName:"p"},"Dropdown Tool"),", on the other hand, belongs in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Dropdown"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_dropdown"),"."),(0,a.kt)("p",null,"Like this:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(2397).Z,width:"1536",height:"653"})),(0,a.kt)("admonition",{title:"Indentation",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Be aware that your tool code needs to be ",(0,a.kt)("strong",{parentName:"p"},"indented"),'. It needs to be on the same "level" as the line ',(0,a.kt)("inlineCode",{parentName:"p"},"pass"),".\nYou can add an indentation with the Tab key on your keyboard."),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("img",{src:n(6291).Z,width:"1298",height:"134"})),(0,a.kt)("img",{src:"/img/doc/project_notebook_6_tabkey.png",alt:"tabkey",width:"120"})),(0,a.kt)("p",null,"If you want to create a second tool of the same kind, e.g. a second switch, you can place the code for the second\nswitch right after the code of the first one."),(0,a.kt)("h3",{id:"52-the-get_-and-set_-function"},"5.2 The ",(0,a.kt)("inlineCode",{parentName:"h3"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"h3"},"set_")," Function"),(0,a.kt)("p",null,"MoL\xf6we tool codes are formulated as so-called ",(0,a.kt)("strong",{parentName:"p"},"functions"),"."),(0,a.kt)("p",null,"Simply put, a function is a set of ",(0,a.kt)("strong",{parentName:"p"},"instructions")," that is executed when the function is called."),(0,a.kt)("p",null,"There are two functions that we need to define for a MoL\xf6we Tool: the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function and the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function."),(0,a.kt)("h4",{id:"521-the-get_-function"},"5.2.1 The ",(0,a.kt)("inlineCode",{parentName:"h4"},"get_")," Function"),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function, we define the ",(0,a.kt)("strong",{parentName:"p"},"initial state")," of a tool, meaning its default parameters."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example:"))),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function of the Dropdown Tool, you define which options should appear/are available\nin the dropdown list and, in addition, which option will be selected by ",(0,a.kt)("strong",{parentName:"p"},"default")," (i.e. when you open the slide)"),(0,a.kt)("h4",{id:"522-the-set_-function"},"5.2.2 The ",(0,a.kt)("inlineCode",{parentName:"h4"},"set_")," Function"),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function, we define what happens when the tool is ",(0,a.kt)("strong",{parentName:"p"},"executed"),"."),(0,a.kt)("p",null,"We can configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function in such a way that it changes a parameter value of another tool.\nThis is how we can set up ",(0,a.kt)("strong",{parentName:"p"},"interactions")," between tools."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Example:"))),(0,a.kt)("p",null,"Using the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function of a Button Tool, you can change the parameter displayed on the Y-Axis of a Graph Tool."),(0,a.kt)("hr",null),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Naturally, some tools do ",(0,a.kt)("strong",{parentName:"p"},"not")," require both the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function."),(0,a.kt)("p",{parentName:"admonition"},"The Graph tool, for example, only needs the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function, containing the data you want to display in the graph."),(0,a.kt)("p",{parentName:"admonition"},"The Button tool, on the other hand, only needs the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function, containing instructions on what to do when the button is pressed\n(i.e. when its ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function is called).")),(0,a.kt)("h2",{id:"6-tool-codes"},(0,a.kt)("strong",{parentName:"h2"},"6 Tool Codes")),(0,a.kt)("p",null,"Here we present the ",(0,a.kt)("strong",{parentName:"p"},"basic code")," for each tool.\nYou can copy the code into your Project Notebook and adjust it to your needs."),(0,a.kt)("p",null,"Also, please see our ",(0,a.kt)("strong",{parentName:"p"},"User Examples")," (left sidebar)."),(0,a.kt)("h3",{id:"61-switch"},"6.1 Switch"),(0,a.kt)("p",null,"The purpose of the Switch Tool is to change the value of a variable (i.e. parameter) from one to another."),(0,a.kt)("p",null,"For that, you first need to define the variable that you want to change with the Switch Tool in the cell\n",(0,a.kt)("em",{parentName:"p"},'"Global Variables, Constants, Settings"'),"."),(0,a.kt)("p",null,'In this example, we have named the variable "switch_value" and given it the value "0".'),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(3105).Z,width:"1426",height:"420"})),(0,a.kt)("p",null,"Now you need to define both a ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function. "),(0,a.kt)("p",null,"In this example,..."),(0,a.kt)("p",null,"Place the code in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Switch"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_switch"),"."),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(7499).Z,width:"1417",height:"742"})),(0,a.kt)("p",null,"See another example for the Switch Tool in the User Examples Chapter ",(0,a.kt)("a",{parentName:"p",href:"/docs/moloewe-tools/map"},(0,a.kt)("strong",{parentName:"a"},"here")),"."),(0,a.kt)("h3",{id:"62-dropdown"},"6.2 Dropdown"),(0,a.kt)("p",null,"Place the code for the Dropdown tool in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Dropdown"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_dropdown"),"."),(0,a.kt)("p",null,"The Dropdown tool requires both a ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function."),(0,a.kt)("h4",{id:"621-example-scenario"},"6.2.1 Example Scenario"),(0,a.kt)("p",null,"We need a Dropdown tool that allows users to select a value of 10, 20, or 30 during a presentation. The selected\nvalues will be used to set the font size of a chart."),(0,a.kt)("p",null,"The code snippet below represents the entirety of code that needs to be written to create one dropdown menu that allows\nusers to select a value from a set of three values (10, 20, and 30 in this example)."),(0,a.kt)("p",null,"First, a global variable that stores a default value of the dropdown tool needs to be defined. In the example below,\nthe global variable is named ",(0,a.kt)("inlineCode",{parentName:"p"},"font_size"),' and the "default" or "initial" value that it contains is 20. As such,\n',(0,a.kt)("inlineCode",{parentName:"p"},"font_size = 20")," even when the user has not interacted with the dropdown tool at all."),(0,a.kt)("p",null,"Second, under the class ",(0,a.kt)("inlineCode",{parentName:"p"},"tool_dropdown"),", a pair of ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions are defined. The ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function is\nused to define the dropdown list options that are to be presented to the user when the user interacts with the\ndropdown tool during a presentation. Whereas, the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function is used by the system back-end to change value\nstored in the variable ",(0,a.kt)("inlineCode",{parentName:"p"},"font_size")," when a user makes a selection from the dropdown list. Note that the naming scheme\nbetween the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions are consistent as they both have the exact same name except the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," prefixes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'global font_size\nfont_size = 20\n\nclass tool_dropdown:\n    def get_plot_font_size(self):\n        global font_size\n        return {\n            "values": [10, 20, 30],\n            "default": font_size\n        }\n\n    def set_plot_font_size(self, dropbox_selection):\n        global font_size\n        font_size = dropbox_selection\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"get_plot_font_size")," function first calls the global variable ",(0,a.kt)("inlineCode",{parentName:"p"},"font_size"),". This way, the value stored in the\nglobal variable can be changed from within the local scope of the function. Then, the function returns a dictionary\nwith two key-value pairs. The first item is a key named ",(0,a.kt)("inlineCode",{parentName:"p"},"values")," which is mapped to a list of values that form the\noptions presented to the users during a presentation. The second item is a key named ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," which contains the\nglobal variable as its value."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"set_plot_font_size")," is used by the MoL\xf6we back-end to pass the selection made by a user with the dropdown tool.\nThis function contains a keyword argument named ",(0,a.kt)("inlineCode",{parentName:"p"},"dropdown_selection")," which is used by the MoL\xf6we back-end change the\nvalue stored in the global variable ",(0,a.kt)("inlineCode",{parentName:"p"},"font_size")," (as can be seen in the code within the function)."),(0,a.kt)("p",null,"Once the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions have been defined, a dropdown tool can be placed on a slide by opening the slide\nin Edit Mode."),(0,a.kt)("p",null,"If another dropdown tool is required for the presentation, say one that lets users select from different cities in\nGermany, a new pair of get and set functions need to be defined under the class ",(0,a.kt)("inlineCode",{parentName:"p"},"tool_dropdown")," as shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'global font_size\nfont_size = 20\n\nglobal german_city\ngerman_city = "Berlin"\n\nclass tool_dropdown:\n    def get_plot_font_size(self):\n        global font_size\n        return {\n            "values": [10, 20, 30],\n            "default": font_size\n        }\n\n    def set_plot_font_size(self, dropbox_selection):\n        global font_size\n        font_size = dropbox_selection\n\n    def get_german_city(self):\n        global german_city\n        return {\n            "values": ["Berlin", "Munich", "L\xfcneburg", "Kiel"],\n            "default": german_city\n        }\n    def set_german_city(self, dropbox_selection):\n        global german_city\n        german_city = dropbox_selection\n')),(0,a.kt)("h3",{id:"63-button"},"6.3 Button"),(0,a.kt)("p",null,"Place the code for the Button tool in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Button"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_button"),"."),(0,a.kt)("p",null,"The Button tool requires only a ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function."),(0,a.kt)("h4",{id:"631-example-scenario"},"6.3.1 Example Scenario"),(0,a.kt)("p",null,"An example function that needs to be defined in order to use this feature is presented below (along with the class definition).\nIn this example, the variable whose value is being changed is ",(0,a.kt)("inlineCode",{parentName:"p"},"stored_value")," which has ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," as its initial value.\nLikewise, the function ",(0,a.kt)("inlineCode",{parentName:"p"},"set_to_one()")," is executed when the button is pressed (while at Presentation or Controller Mode)\nto change the value stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"stored_value")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"1"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"global stored_value\nstored_value = 0\n\nclass tool_button:\n    def set_to_one(self):\n        global stored_value\n        stored_value = 1\n\n")),(0,a.kt)("h3",{id:"64-slider"},"6.4 Slider"),(0,a.kt)("p",null,"Place the code for the Slider tool in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Slider"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_slider"),"."),(0,a.kt)("p",null,"The Slider tool requires both a ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function."),(0,a.kt)("h4",{id:"641-example-scenario"},"6.4.1 Example Scenario"),(0,a.kt)("p",null,"We need a Slider tool that allows users to select a value between 1 and 20. Additionally, only integer values are allowed.\nThe selected values will be used to set the line width of a chart."),(0,a.kt)("p",null,"The code snippet below represents the entirety of code that needs to be written to create one Slider that allows users\nto select a value from a range between 1 and 20."),(0,a.kt)("p",null,"First, a global variable that stores a default value of the slider tool needs to be defined. In the example below,\nthe global variable is named ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1"),' and the "default" or "initial" value that it contains is 20.\nAs such, ',(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1 = 1")," even when the user has not interacted with the slider tool at all."),(0,a.kt)("p",null,"Second, under the class ",(0,a.kt)("inlineCode",{parentName:"p"},"tool_slider"),", a pair of ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions are defined. The ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function is used\nto define the slider options (minimum value, maximum value, and the step by which the value changes when user moves\nthe slider left or right) that are to be presented to the user when the user interacts with the Slider tool during a\npresentation. Whereas, the ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," function is used by the system back-end to change value stored in the variable\n",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1")," when a user makes a selection using the slider. Note that the naming scheme between the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and\n",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions are consistent as they both have the exact same name except the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," prefixes."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'global line_width_1\nline_width_1 = 1\n\nclass tool_slider:\n    def get_plot_line_width_1(self):\n        global line_width_1\n        return {\n            "Minimum": 1,\n            "Maximum": 20,\n            "Step": 1,\n            "Default": line_width_1\n        }\n\n    def set_plot_line_width_1(self, slider_selection):\n        global line_width_1\n        line_width_1 = float(slider_selection)\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"get_plot_line_width_1")," function first calls the global variable ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1"),".\nThis way, the value stored in the global variable can be changed from within the local scope of the function.\nThen, the function returns a dictionary with four key-value pairs as follows.\nThe first item in the dictionary is a key named ",(0,a.kt)("inlineCode",{parentName:"p"},"Minimum"),", with the value mapped to it signifying the lowest value\nthat can be set using the slider. Likewise, the second item in the dictionary is a key named ",(0,a.kt)("inlineCode",{parentName:"p"},"Maximum"),",\nwith the value mapped to it signifying the highest value that can be set using the slider.\nThe third item in the dictionary is a key named ",(0,a.kt)("inlineCode",{parentName:"p"},"Step"),", which contains the value by which the number is\nincremented when the slider is moved for just one step. The final item in the dictionary is a key named\n",(0,a.kt)("inlineCode",{parentName:"p"},"Default")," which signifies the default value of the Slider tool when the tool has not been interacted with.\nThe value mapped to this key is the global variable ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1"),"."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"set_plot_line_width_1")," is used by the MoL\xf6we back-end to pass the selection made by a user with the Slider tool.\nThis function contains a keyword argument named ",(0,a.kt)("inlineCode",{parentName:"p"},"slider_selection")," which is used by the MoL\xf6we back-end change the\nvalue stored in the global variable ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1")," (as can be seen in the code within the function)."),(0,a.kt)("p",null,"Once the ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"set_")," functions have been defined, a Slider tool can be placed on a slide by opening the slide in Edit Mode."),(0,a.kt)("p",null,"If another slider tool is required for the presentation, say one that lets users change line width of a different line\nin the plot, a new pair of get and set functions need to be defined under the class ",(0,a.kt)("inlineCode",{parentName:"p"},"tool_slider")," as shown below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'global line_width_1\nline_width_1 = 1\n\nglobal line_width_2\nline_width_2 = 7\n\nclass tool_slider:\n\n    # first line\n    def get_plot_line_width_1(self):\n        global line_width_1\n        return {\n            "Minimum": 1,\n            "Maximum": 20,\n            "Step": 1,       # value increments by +/- 1\n            "Default": line_width_1\n        }\n\n    def set_plot_line_width_1(self, slider_selection):\n        global line_width_1\n        line_width_1 = float(slider_selection)\n\n    # second line\n    def get_plot_line_width_2(self):\n        global line_width_2\n        return {\n            "Minimum": 5,\n            "Maximum": 15,\n            "Step": 1.5,     # value increments by +/- 1.5\n            "Default": line_width_2\n        }\n\n    def set_plot_line_width_2(self, slider_selection):\n        global line_width_2\n        line_width_2 = float(slider_selection)\n')),(0,a.kt)("h3",{id:"65-graph"},"6.5 Graph"),(0,a.kt)("p",null,"Place the code for the Graph tool in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Graph"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_graph"),"."),(0,a.kt)("p",null,"The Graph tool only requires a ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function."),(0,a.kt)("h4",{id:"651-loading-data-from-files-or-urls"},"6.5.1 Loading Data from Files or URLs"),(0,a.kt)("p",null,"Users can upload data files to MoL\xf6we and load the data so that they can use it for a graph or a map."),(0,a.kt)("h4",{id:"652-loading-data-from-a-file"},"6.5.2 Loading Data from a File"),(0,a.kt)("p",null,"The following example shows how to load data from a file named ",(0,a.kt)("inlineCode",{parentName:"p"},"diabetes.csv"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nclass tool_graph:\n    \n    def get_some_chart(self):\n\n        # Load data from a file\n        global data\n        diabetes = pd.read_csv(data + "diabetes.csv")\n\n        #                            #\n        # rest of the code goes here #\n        #                            #\n\n        return fig.to_dict()\n')),(0,a.kt)("p",null,"The project path defined in the beginning of the Project Notebook (more ",(0,a.kt)("a",{parentName:"p",href:"docs/05-working-with-notebooks/00_template_notebook.md#21-mandatory-section"},(0,a.kt)("strong",{parentName:"a"},"here")),") allows loading the data using the relative path. The relative path is stored in a global variable named ",(0,a.kt)("inlineCode",{parentName:"p"},"data"),". The user does not have to know that is stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"data"),"; as long as a user knows the file name of a data file, they can load the data by simply using the relative path to the file that is created by concatenating the string of the file name to the ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," variable."),(0,a.kt)("h4",{id:"653-loading-data-from-url"},"6.5.3 Loading Data from URL"),(0,a.kt)("p",null,"The following example shows how to load data from a file named ",(0,a.kt)("inlineCode",{parentName:"p"},"diabetes.csv"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nclass tool_graph:\n    \n    def get_some_other_chart(self):\n\n        # Load data from a URL\n        diabetes = pd.read_csv("https://www.<link>.com/to/data/file.csv")\n\n        #                            #\n        # rest of the code goes here #\n        #                            #\n\n        return fig.to_dict()\n')),(0,a.kt)("p",null,"As you can see, loading data from a URL quite straightforward. "),(0,a.kt)("h4",{id:"654-example-scenario"},"6.5.4 Example Scenario"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'class tool_graph:\n    \n    def get_plotly_font_lwd_test_chart(self):\n\n        global line_width_1  # input from Slider Tool\n        global line_width_2  # input from Slider Tool\n        global font_size     # input from Dropdown Tool\n\n        fig = go.Figure()\n\n        # 1.  Make the two line plots\n        # Trace 1\n        fig.add_trace(go.Scatter(\n            x=[0, 1, 2, 3, 4, 5, 6, 7, 8],\n            y=[0, 1, 2, 3, 4, 5, 6, 7, 8],\n            name="Line 1",\n            mode="lines",\n            line=dict(width=line_width_1)\n        ))\n        # Trace 2\n        fig.add_trace(go.Scatter(\n            x=[0, 1, 2, 3, 4, 5, 6, 7, 8],\n            y=[1, 0, 3, 2, 5, 4, 7, 6, 8],\n            name="Line 2",\n            mode="lines+markers",\n            line=dict(width=line_width_2) # Line width\n            \n        ))\n\n        # 2. Add text related settings\n        fig.update_layout(\n            title="Plot Title (default: {})".format(font_size),\n            xaxis=dict(title="X-axis title", automargin=True),\n            yaxis=dict(title="Y-axis title", automargin=True),\n        )\n        \n        # 3. Update plotly template and margin sizes\n        fig.update_layout(\n            template="plotly_white",\n            margin=go.layout.Margin(l=100, r=0, b=100, t=font_size*2.5, pad=0),\n        )\n        \n        # 4. Font size\n        fig.update_layout(font=go.layout.Font(size=font_size))\n\n        return fig.to_dict()\n')),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"get_plotly_font_lwd_test_chart")," function contains code that is used to create Plotly charts.\nThis example chart (which is a line chart) displays two lines. Additionally, this code also takes input from other\ninteractive tools such as Slider Tool (in case of ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_1")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"line_width_2"),") and Dropdown Tool (in case of ",(0,a.kt)("inlineCode",{parentName:"p"},"font_size"),").\nDepending on the values selected using the different interactive tools, the looks of the graph\n(the data and the graph properties) can be changed."),(0,a.kt)("p",null,"The global variables called within the function allows access to the values stored in the different variables that\ncorrespond to the different MoL\xf6we tools."),(0,a.kt)("p",null,"Please note the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"the name of the function must start with ",(0,a.kt)("inlineCode",{parentName:"li"},"get_")," and end with ",(0,a.kt)("inlineCode",{parentName:"li"},"_chart")),(0,a.kt)("li",{parentName:"ul"},"the function must return a dictionary of the figure (",(0,a.kt)("inlineCode",{parentName:"li"},"fig.to_dict()"),")")),(0,a.kt)("p",null,"Users are referred to the official Plotly documentations for information on how to create ",(0,a.kt)("a",{parentName:"p",href:"https://plotly.com/python/"},"Plotly charts"),"."),(0,a.kt)("h3",{id:"66-map"},"6.6 Map"),(0,a.kt)("p",null,"Place the code for the Map tool in the cell ",(0,a.kt)("em",{parentName:"p"},'"Tool Map"')," beneath the line ",(0,a.kt)("inlineCode",{parentName:"p"},"class tool_map"),"."),(0,a.kt)("p",null,"The Graph tool only requires a ",(0,a.kt)("inlineCode",{parentName:"p"},"get_")," function."),(0,a.kt)("p",null,"The maps created using the Map tool are essentially Plotly charts. As a result, many aspects of the way the map tool is\ndefined and used bear resemblance to the Graph Tool.\nHence, readers are advised to read the documentation on the Graph Tool to learn about the Map Tool."),(0,a.kt)("h3",{id:""},"?"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"File Extension"),(0,a.kt)("th",{parentName:"tr",align:null},"Project Directory"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".PNG")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/image")),(0,a.kt)("td",{parentName:"tr",align:null},"Image")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".JPG")," or ",(0,a.kt)("inlineCode",{parentName:"td"},".jpg")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/image")),(0,a.kt)("td",{parentName:"tr",align:null},"Image")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".JPEG")," or ",(0,a.kt)("inlineCode",{parentName:"td"},".jpeg")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/image")),(0,a.kt)("td",{parentName:"tr",align:null},"Image")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".MP4")," or ",(0,a.kt)("inlineCode",{parentName:"td"},".mp4")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/video")),(0,a.kt)("td",{parentName:"tr",align:null},"Video file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".txt")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/text")),(0,a.kt)("td",{parentName:"tr",align:null},"Text file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".md")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/text")),(0,a.kt)("td",{parentName:"tr",align:null},"Markdown file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".html")," or ",(0,a.kt)("inlineCode",{parentName:"td"},".HTML")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/text")),(0,a.kt)("td",{parentName:"tr",align:null},"HTML file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},".shp"),", ",(0,a.kt)("inlineCode",{parentName:"td"},".shx"),", ",(0,a.kt)("inlineCode",{parentName:"td"},".prj")," and ",(0,a.kt)("inlineCode",{parentName:"td"},".dbf")),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"/data")),(0,a.kt)("td",{parentName:"tr",align:null},"Shapefile extensions")))),(0,a.kt)("h2",{id:"7-downloading-the-project-notebook"},(0,a.kt)("strong",{parentName:"h2"},"7 Downloading the Project Notebook")),(0,a.kt)("p",null,"rename notebook to name with lower case"),(0,a.kt)("h2",{id:"8-uploading-the-project-notebook-to-mol\xf6we"},(0,a.kt)("strong",{parentName:"h2"},"8 Uploading the Project Notebook to MoL\xf6we")),(0,a.kt)("p",null,"Below are the files that can be uploaded and the directories in the project that they will be placed in."),(0,a.kt)("p",null,"see steps in chapter notebooks"))}h.isMDXComponent=!0},7518:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_1_upload_notebook-2d78cc79a38228dd2fbbaa92d6d8d947.jpg"},4393:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_2_access_notebook-ae5b2ec630bd49da8b459ec632fe4467.png"},2750:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_3_import_modules-fe6d43bcc10091ba3dd6f41defdb502b.jpg"},2397:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_4_classes-f79cb7fc6452bc79932ddfad6020a86c.jpg"},6291:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_5_indentation-50b7137bbeb0afc3e016351cf66877b6.jpg"},3105:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_6_switch_1-ff6b75d40c3a1548c3940b0c9bdb1d24.jpg"},7499:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/project_notebook_6_switch_2-403a5ec834f63f457b23ed7b63d82856.png"}}]);